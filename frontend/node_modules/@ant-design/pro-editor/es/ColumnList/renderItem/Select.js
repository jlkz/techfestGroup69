import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _templateObject;
import { useSortableList } from "../..";
import { Select } from 'antd';
import { createStyles } from 'antd-style';
import { memo } from 'react';
import { jsx as _jsx } from "react/jsx-runtime";
var useStyle = createStyles(function (_ref) {
  var ant = _ref.prefixCls,
    token = _ref.token,
    css = _ref.css,
    cx = _ref.cx;
  var prefix = "".concat(ant, "-").concat(token.editorPrefix, "-content");
  return {
    select: cx("".concat(prefix, "-tem"), css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n        .", "-select-selector {\n          padding-left: 13px;\n        }\n      "])), ant))
  };
});
var ControlSelect = /*#__PURE__*/memo(function (_ref2) {
  var dataIndex = _ref2.dataIndex,
    value = _ref2.value,
    index = _ref2.index,
    style = _ref2.style,
    options = _ref2.options,
    placeholder = _ref2.placeholder;
  var instance = useSortableList();
  var _useStyle = useStyle(),
    styles = _useStyle.styles;
  return /*#__PURE__*/_jsx(Select, {
    size: "small",
    style: style,
    options: options,
    className: styles.select,
    value: value,
    onClear: function onClear() {
      instance.updateItem(_defineProperty({}, dataIndex, null), index);
    },
    placeholder: placeholder || '请选择',
    onChange: function onChange(value) {
      instance.updateItem(_defineProperty({}, dataIndex, value), index);
    }
  });
});
export default ControlSelect;