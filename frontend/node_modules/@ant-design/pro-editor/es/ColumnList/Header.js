import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _templateObject, _templateObject2;
import { createStyles } from 'antd-style';
import { memo } from 'react';
import { Flexbox } from 'react-layout-kit';
import { jsx as _jsx } from "react/jsx-runtime";
var useStyle = createStyles(function (_ref) {
  var token = _ref.token,
    css = _ref.css,
    cx = _ref.cx,
    prefixCls = _ref.prefixCls;
  var prefix = "".concat(prefixCls, "-").concat(token === null || token === void 0 ? void 0 : token.editorPrefix, "-column-list");
  return {
    content: cx("".concat(prefix, "-content"), css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n        flex: 1;\n        width: 100%;\n        height: 24px;\n        font-size: 12px;\n        border-radius: 2px;\n        min-width: 48px;\n      "])))),
    header: cx("".concat(prefix, "-header"), css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n        color: ", ";\n        padding-left: 8px;\n      "])), token.colorTextTertiary))
  };
});
export var Header = /*#__PURE__*/memo(function (_ref2) {
  var columns = _ref2.columns;
  var _useStyle = useStyle(),
    styles = _useStyle.styles,
    cx = _useStyle.cx;
  return /*#__PURE__*/_jsx(Flexbox, {
    horizontal: true,
    align: 'center',
    gap: 4,
    children: columns.map(function (item, index) {
      return /*#__PURE__*/_jsx("div", {
        className: cx(styles.content, styles.header),
        children: item.title
      }, "".concat(item.dataIndex, "-").concat(index));
    })
  });
});