import isEqual from 'fast-deep-equal';
import { memo, useImperativeHandle } from 'react';
import { createStoreUpdater, storeApiSetState } from 'zustand-utils';
import { useProBuilder } from "../hooks/useProBuilder";
import { useStoreApi } from "../store";

/**
 * 传入StoreUpdater 的值
 */

var StoreUpdater = /*#__PURE__*/memo(function (_ref) {
  var config = _ref.config,
    onConfigChange = _ref.onConfigChange,
    componentAsset = _ref.componentAsset,
    mode = _ref.mode,
    onCanvasError = _ref.onCanvasError,
    assetAwareness = _ref.assetAwareness,
    onAssetAwarenessChange = _ref.onAssetAwarenessChange,
    editorAwareness = _ref.editorAwareness,
    onEditorAwarenessChange = _ref.onEditorAwarenessChange,
    editorRef = _ref.editorRef;
  var storeApi = useStoreApi();
  var useStoreUpdater = createStoreUpdater(storeApi);
  var _storeApi$getState = storeApi.getState(),
    yjsDoc = _storeApi$getState.yjsDoc;
  // 结合 yjs 进行变更
  var useUpdateWithYjs = function useUpdateWithYjs(key, value) {
    useStoreUpdater(key, value, [value], function (partialNewState) {
      // 如果相等，不需要更新
      if (isEqual(value, storeApi.getState()[key])) return;
      storeApiSetState(storeApi, partialNewState, false, {
        type: "\uD83D\uDCF6 useUpdateWithYjs / ".concat(key),
        payload: value
      });
      yjsDoc.updateHistoryData(partialNewState);
    });
  };
  useStoreUpdater('mode', mode);
  useStoreUpdater('assetAwareness', assetAwareness);
  useStoreUpdater('editorAwareness', editorAwareness);
  useUpdateWithYjs('config', config);

  // 为了在受控模式下避免不必要的渲染，将下面的对象只做第一次加载
  useStoreUpdater('componentAsset', componentAsset, []);
  useStoreUpdater('onAssetAwarenessChange', onAssetAwarenessChange, []);
  useStoreUpdater('onEditorAwarenessChange', onEditorAwarenessChange, []);
  useStoreUpdater('onConfigChange', onConfigChange, []);
  useStoreUpdater('onCanvasError', onCanvasError, []);
  var instance = useProBuilder();
  useImperativeHandle(editorRef, function () {
    return instance;
  });
  return null;
});
export default StoreUpdater;