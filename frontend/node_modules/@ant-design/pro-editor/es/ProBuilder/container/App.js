import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { useHotkeyManager } from "../hooks/useHotkeyManager";
import { memo } from 'react';
import { shallow } from 'zustand/shallow';
import DefaultErrorBoundary from "../../ErrorBoundary";
import AssetEmpty from "../components/AssetEmpty";
import AssetStoreUpdater from "../components/AssetStoreUpdater";
import ConfigPanel from "../components/ConfigPanel";
import NavBar from "../components/NavBar";
import Stage from "../components/Stage";
import { useStore } from "../store";
import { useStyle } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
export var ProBuilder = /*#__PURE__*/memo(function (props) {
  var logo = props.logo,
    _props$hideNavbar = props.hideNavbar,
    hideNavbar = _props$hideNavbar === void 0 ? true : _props$hideNavbar,
    style = props.style,
    _props$ErrorBoundary = props.ErrorBoundary,
    ErrorBoundary = _props$ErrorBoundary === void 0 ? DefaultErrorBoundary : _props$ErrorBoundary,
    onCopy = props.onCopy;
  var _useStore = useStore(function (s) {
      return [s.exportConfig, s.componentAsset, s.editorAwareness.panelSize.width, s.editorAwareness.panelExpand];
    }, shallow),
    _useStore2 = _slicedToArray(_useStore, 4),
    exportConfig = _useStore2[0],
    componentAsset = _useStore2[1],
    width = _useStore2[2],
    panelExpand = _useStore2[3];
  var _useStyle = useStyle(),
    styles = _useStyle.styles;

  // 注册快捷键
  useHotkeyManager();

  // 第一次渲染的时候 componentAsset 是不存在的，为避免面板模块报错，返回空状态组件
  if (!componentAsset) return /*#__PURE__*/_jsx(AssetEmpty, {});
  var AssetProvider = componentAsset.AssetProvider;
  var children = /*#__PURE__*/_jsxs("div", {
    className: styles.main,
    style: style,
    children: [/*#__PURE__*/_jsxs("div", {
      className: styles.left,
      style: {
        maxWidth: panelExpand ? "calc(100vw - ".concat(width, "px)") : '100vw'
      },
      children: [hideNavbar ? null : /*#__PURE__*/_jsx(NavBar, {
        logo: logo
      }), /*#__PURE__*/_jsx(Stage, {
        hideNavbar: hideNavbar,
        onCopy: onCopy
      })]
    }), /*#__PURE__*/_jsx(ConfigPanel, {})]
  });
  return /*#__PURE__*/_jsx(ErrorBoundary, {
    onExportConfig: exportConfig,
    children: /*#__PURE__*/_jsxs(AssetProvider, {
      createStore: function createStore() {
        return componentAsset.componentStore;
      },
      children: [children, /*#__PURE__*/_jsx(AssetStoreUpdater, {})]
    })
  });
});
export default ProBuilder;