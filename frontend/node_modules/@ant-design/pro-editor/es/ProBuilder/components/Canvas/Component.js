import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { useSize } from 'ahooks';
import { ConfigProvider } from 'antd';
import zhCN from 'antd/locale/zh_CN';
import { memo, useEffect, useRef } from 'react';
import { shallow } from 'zustand/shallow';
import { useTheme } from 'antd-style';
import InteractContainer from "../../../InteractContainer";
import { useUpdateEditorAwareness } from "../../hooks/useEditorAwareness";
import { useStore } from "../../store";
import { jsx as _jsx } from "react/jsx-runtime";
var Component = /*#__PURE__*/memo(function () {
  var token = useTheme();
  var prefix = "".concat(token.prefixCls, "-").concat(token.editorPrefix, "-pro-builder-canvas");
  var _useStore = useStore(function (s) {
      return [s.interaction, s.enableCanvasInteraction, s.componentAsset, s.internalUpdateCanvasInteract];
    }, shallow),
    _useStore2 = _slicedToArray(_useStore, 4),
    interaction = _useStore2[0],
    enableCanvasInteraction = _useStore2[1],
    componentAsset = _useStore2[2],
    updateCanvasInteract = _useStore2[3];
  var ref = useRef();
  var size = useSize(ref);
  var _useUpdateEditorAware = useUpdateEditorAwareness(),
    updateEditorAwareness = _useUpdateEditorAware.updateEditorAwareness;
  useEffect(function () {
    updateEditorAwareness({
      componentSizeOnCanvas: size
    });
  }, [size]);
  return (
    /*#__PURE__*/
    // 组件 外围包一层用户交互，用于改变 columns 配置或其他配置
    _jsx(InteractContainer, {
      disabled: !enableCanvasInteraction,
      status: interaction,
      rules: componentAsset.rules,
      getContainer: "#".concat(prefix),
      onStatusChange: updateCanvasInteract,
      children: /*#__PURE__*/_jsx("div", {
        id: "".concat(prefix),
        ref: ref,
        className: "".concat(prefix, "-component"),
        children: /*#__PURE__*/_jsx(ConfigProvider, {
          locale: zhCN,
          prefixCls: "canvas",
          children: /*#__PURE__*/_jsx(componentAsset.Component, {})
        })
      })
    })
  );
});
export default Component;