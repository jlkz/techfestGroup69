import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { DraggablePanel } from "../../..";
import isEqual from 'fast-deep-equal';
import { memo } from 'react';
import { shallow } from 'zustand/shallow';
import { useStore } from "../../store";
import { jsx as _jsx } from "react/jsx-runtime";
var ConfigPanel = /*#__PURE__*/memo(function () {
  var _useStore = useStore(function (s) {
      return [s.editorAwareness.panelSize.width, s.updatePanelPosition, s.updatePanelSize, s.togglePanelExpand, s.componentAsset, s.editorAwareness.panelExpand];
    }, shallow),
    _useStore2 = _slicedToArray(_useStore, 6),
    width = _useStore2[0],
    updatePosition = _useStore2[1],
    updatePanelSize = _useStore2[2],
    togglePanelExpand = _useStore2[3],
    componentAsset = _useStore2[4],
    isExpand = _useStore2[5];
  var panelPosition = useStore(function (s) {
    return s.editorAwareness.panelPosition;
  }, isEqual);
  return /*#__PURE__*/_jsx(DraggablePanel, {
    isExpand: isExpand,
    style: {
      display: 'flex',
      flexDirection: 'column'
    },
    position: panelPosition,
    onPositionChange: updatePosition,
    onSizeDragging: function onSizeDragging(delta, size) {
      if (!size.width) return;
      updatePanelSize({
        width: typeof size.width === 'string' ? parseInt(size.width) : size.width
      });
    },
    onExpandChange: togglePanelExpand,
    minWidth: 340,
    size: {
      width: width,
      height: '100%'
    },
    children: /*#__PURE__*/_jsx(componentAsset.ConfigPanel, {})
  });
});
export default ConfigPanel;