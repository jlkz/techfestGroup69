/// <reference types="react" />
import { StudioStylish, StudioThemeToken } from './themes';
type ProEditorToken = {
    editorPrefix: string;
};
declare module 'antd-style' {
    interface CustomToken extends StudioThemeToken {
    }
    interface CustomStylish extends StudioStylish {
    }
    interface CustomToken extends ProEditorToken {
    }
}
declare const createStyles: <Props, Input extends import("antd-style").BaseReturnType = import("antd-style").BaseReturnType>(styleOrGetStyle: import("antd-style").StyleOrGetStyleFn<Input, Props>, options?: import("antd-style").ClassNameGeneratorOption) => (props?: Props) => import("antd-style").ReturnStyles<Input>, ThemeProvider: <T_1 = any, S = any>(props: import("antd-style").ThemeProviderProps<T_1, S>) => import("react").ReactElement<any, any>;
export { createGlobalStyle, css, cx, injectGlobal, keyframes, useAntdToken as useToken, type AntdToken, } from 'antd-style';
export * from './themes';
export { ThemeProvider, createStyles };
