import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { Avatar as A } from 'antd';
import { memo } from 'react';
import { shallow } from 'zustand/shallow';
import { useStore } from "../store";
import Avatar from "./Avatar";
import { jsx as _jsx } from "react/jsx-runtime";
var AvatarWrapper = function AvatarWrapper(_ref) {
  var id = _ref.id,
    name = _ref.name,
    color = _ref.color,
    active = _ref.active;
  var _useStore = useStore(function (s) {
      return [s.followUser, s.currentUser, s.setFollowUser];
    }, shallow),
    _useStore2 = _slicedToArray(_useStore, 3),
    followUser = _useStore2[0],
    currentUser = _useStore2[1],
    setFollowUser = _useStore2[2];
  var current = currentUser === id;
  var following = followUser && followUser === id;
  return /*#__PURE__*/_jsx(Avatar, {
    name: name,
    current: current,
    following: following,
    color: color,
    active: active,
    onClick: function onClick() {
      if (current) return;
      if (following) {
        setFollowUser(undefined);
      } else {
        setFollowUser(id);
      }
    }
  });
};
var Avatars = /*#__PURE__*/memo(function () {
  var awarenessStates = useStore(function (s) {
    return s.awarenessStates;
  });
  return /*#__PURE__*/_jsx(A.Group, {
    children: awarenessStates === null || awarenessStates === void 0 ? void 0 : awarenessStates.filter(Boolean).map(function (_ref2, index) {
      var user = _ref2.user,
        active = _ref2.active;
      return /*#__PURE__*/_jsx(AvatarWrapper, _objectSpread({
        active: active
      }, user), "".concat(user === null || user === void 0 ? void 0 : user.id, "-").concat(index));
    })
  });
});
export default Avatars;