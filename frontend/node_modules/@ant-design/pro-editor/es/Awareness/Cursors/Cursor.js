import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _templateObject, _templateObject2;
import Color from 'color';
import { memo } from 'react';
import { createStyles } from "../../theme";
import CursorSvg from "./CursorSvg";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var useStyles = createStyles(function (_ref) {
  var css = _ref.css;
  return {
    container: css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    position: fixed;\n\n    z-index: 5000;\n  "]))),
    name: css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    position: absolute;\n    top: 20px;\n    left: 20px;\n    font-size: 12px;\n    max-width: 96px;\n    padding: 2px 12px;\n    border-radius: 4px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  "])))
  };
});
var Cursor = /*#__PURE__*/memo(function (_ref2) {
  var position = _ref2.position,
    color = _ref2.color,
    name = _ref2.name;
  var _useStyles = useStyles(),
    styles = _useStyles.styles;
  return /*#__PURE__*/_jsxs("div", {
    className: styles.container,
    style: {
      top: position.y,
      left: position.x
    },
    children: [/*#__PURE__*/_jsx(CursorSvg, {
      color: color
    }), /*#__PURE__*/_jsx("div", {
      className: styles.name,
      style: {
        backgroundColor: color,
        color: Color(color).isLight() ? 'black' : 'white'
      },
      children: name
    })]
  });
});
export default Cursor;