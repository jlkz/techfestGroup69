import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["type", "pannels", "themeType", "headerandfooter"];
import { Flex } from 'antd';
import { Flexbox } from 'react-layout-kit';
import { useStyle } from "./../style";
import { jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsx as _jsx } from "react/jsx-runtime";
var LayoutTypeContainer = function LayoutTypeContainer(props) {
  var type = props.type,
    pannels = props.pannels,
    themeType = props.themeType,
    headerandfooter = props.headerandfooter,
    rest = _objectWithoutProperties(props, _excluded);
  var _useStyle = useStyle({
      themeType: themeType
    }),
    styles = _useStyle.styles;
  var _pannels = _slicedToArray(pannels, 4),
    LeftPannelDom = _pannels[0],
    RightPannelDom = _pannels[1],
    BottomPannelDom = _pannels[2],
    CenterPannelDom = _pannels[3];
  var _headerandfooter = _slicedToArray(headerandfooter, 2),
    HeaderDom = _headerandfooter[0],
    FooterDom = _headerandfooter[1];
  if (type === 'Left&Right') {
    return /*#__PURE__*/_jsxs(Flexbox, _objectSpread(_objectSpread({
      className: styles.layout
    }, rest), {}, {
      children: [HeaderDom, /*#__PURE__*/_jsxs(Flex, {
        className: styles.container,
        children: [LeftPannelDom, /*#__PURE__*/_jsxs(Flex, {
          vertical: true,
          flex: 1,
          children: [CenterPannelDom, BottomPannelDom]
        }), RightPannelDom]
      }), FooterDom]
    }));
  }
  if (type === 'LeftFull') {
    return /*#__PURE__*/_jsxs(Flexbox, _objectSpread(_objectSpread({
      className: styles.layout
    }, rest), {}, {
      children: [HeaderDom, /*#__PURE__*/_jsxs(Flex, {
        className: styles.container,
        children: [LeftPannelDom, /*#__PURE__*/_jsxs(Flex, {
          vertical: true,
          flex: 1,
          children: [/*#__PURE__*/_jsxs(Flex, {
            flex: 1,
            children: [CenterPannelDom, RightPannelDom]
          }), BottomPannelDom]
        })]
      }), FooterDom]
    }));
  }
  if (type === 'RightFull') {
    return /*#__PURE__*/_jsxs(Flexbox, _objectSpread(_objectSpread({
      className: styles.layout
    }, rest), {}, {
      children: [HeaderDom, /*#__PURE__*/_jsxs(Flex, {
        className: styles.container,
        children: [/*#__PURE__*/_jsxs(Flex, {
          vertical: true,
          flex: 1,
          children: [/*#__PURE__*/_jsxs(Flex, {
            flex: 1,
            children: [LeftPannelDom, CenterPannelDom]
          }), BottomPannelDom]
        }), RightPannelDom]
      }), FooterDom]
    }));
  }
  return /*#__PURE__*/_jsx(_Fragment, {
    children: /*#__PURE__*/_jsxs(Flexbox, _objectSpread(_objectSpread({
      className: styles.layout
    }, rest), {}, {
      children: [HeaderDom, /*#__PURE__*/_jsxs(Flex, {
        className: styles.container,
        children: [LeftPannelDom, CenterPannelDom, RightPannelDom]
      }), BottomPannelDom, FooterDom]
    }))
  });
};
export { LayoutTypeContainer };