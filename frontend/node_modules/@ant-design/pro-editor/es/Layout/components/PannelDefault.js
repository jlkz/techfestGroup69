import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["children", "className", "style", "minHeight", "minWidth", "index", "themeType"];
import { DraggablePanel } from "../..";
import { useStyle } from "./../style";
import { jsx as _jsx } from "react/jsx-runtime";
var PannelDefault = function PannelDefault(props) {
  var _ref = props || {},
    _ref$children = _ref.children,
    children = _ref$children === void 0 ? '' : _ref$children,
    className = _ref.className,
    style = _ref.style,
    _ref$minHeight = _ref.minHeight,
    minHeight = _ref$minHeight === void 0 ? 100 : _ref$minHeight,
    _ref$minWidth = _ref.minWidth,
    minWidth = _ref$minWidth === void 0 ? 100 : _ref$minWidth,
    _ref$index = _ref.index,
    index = _ref$index === void 0 ? 0 : _ref$index,
    themeType = _ref.themeType,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useStyle = useStyle({
      themeType: themeType
    }),
    styles = _useStyle.styles,
    cx = _useStyle.cx;
  var getPannelProps = function getPannelProps(index) {
    switch (['left', 'right', 'bottom', 'center'][index]) {
      case 'left':
        return {
          placement: 'left',
          className: styles.leftPannel,
          maxWidth: 500,
          defaultSize: {
            width: '200'
          }
        };
      case 'right':
        return {
          placement: 'right',
          className: styles.rightPannel,
          maxWidth: 500,
          defaultSize: {
            width: '200'
          }
        };
      case 'bottom':
        return {
          placement: 'bottom',
          maxHeight: 400,
          defaultSize: {
            height: '100'
          }
        };
      case 'center':
        return false;
      default:
        return false;
    }
  };
  var pannelProps = getPannelProps(index);
  if (!pannelProps) {
    return /*#__PURE__*/_jsx("div", {
      className: cx(styles.pannel, styles.centerPannel),
      style: style,
      children: /*#__PURE__*/_jsx("div", {
        className: cx(className),
        children: children
      })
    });
  }
  var placement = pannelProps.placement,
    pannelClassName = pannelProps.className;
  return /*#__PURE__*/_jsx(DraggablePanel, _objectSpread(_objectSpread(_objectSpread({
    expandable: false,
    style: {
      border: 'none'
    },
    placement: placement,
    minHeight: minHeight,
    minWidth: minWidth
  }, pannelProps), rest), {}, {
    children: /*#__PURE__*/_jsx("div", {
      className: cx(styles.pannel, pannelClassName, className),
      style: style,
      children: children
    })
  }));
};
export { PannelDefault };