import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import { useSortable } from '@dnd-kit/sortable';
import Item from "./Item";
import { jsx as _jsx } from "react/jsx-runtime";
export default function SortableItem(_ref) {
  var disabled = _ref.disabled,
    id = _ref.id,
    index = _ref.index,
    onRemove = _ref.onRemove,
    _ref$useDragOverlay = _ref.useDragOverlay,
    useDragOverlay = _ref$useDragOverlay === void 0 ? true : _ref$useDragOverlay,
    _ref$handle = _ref.handle,
    handle = _ref$handle === void 0 ? true : _ref$handle,
    getItemStyles = _ref.getItemStyles,
    renderItem = _ref.renderItem,
    renderContent = _ref.renderContent,
    item = _ref.item,
    actions = _ref.actions,
    _ref$hideRemove = _ref.hideRemove,
    hideRemove = _ref$hideRemove === void 0 ? false : _ref$hideRemove;
  var _useSortable = useSortable({
      id: id,
      disabled: disabled
    }),
    attributes = _useSortable.attributes,
    isDragging = _useSortable.isDragging,
    isSorting = _useSortable.isSorting,
    listeners = _useSortable.listeners,
    overIndex = _useSortable.overIndex,
    setNodeRef = _useSortable.setNodeRef,
    transform = _useSortable.transform,
    transition = _useSortable.transition;
  return /*#__PURE__*/_jsx(Item, _objectSpread({
    ref: setNodeRef,
    id: id
    // 数据
    ,
    item: item,
    handle: handle,
    disabled: disabled,
    dragging: isDragging,
    sorting: isSorting,
    hideRemove: hideRemove,
    actions: actions,
    index: index,
    onRemove: onRemove ? function () {
      return onRemove(index);
    } : undefined,
    transform: transform,
    transition: !useDragOverlay && isDragging ? 'none' : transition,
    renderItem: renderItem,
    renderContent: renderContent
    // 样式
    ,
    style: getItemStyles({
      index: index,
      id: id,
      isDragging: isDragging,
      isSorting: isSorting,
      overIndex: overIndex,
      isDragOverlay: false
    }),
    listeners: listeners,
    "data-index": index,
    "data-id": id,
    dragOverlay: !useDragOverlay && isDragging
  }, attributes), id);
}