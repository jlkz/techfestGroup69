import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["color", "dragOverlay", "dragging", "disabled", "fadeIn", "handle", "index", "listeners", "onRemove", "item", "renderItem", "renderContent", "hideRemove", "sorting", "style", "actions", "transition", "transform", "id", "className"];
import { useToken } from "../../../theme";
/* eslint-disable consistent-return */
import classNames from 'classnames';
import { forwardRef, memo, useEffect } from 'react';
import { Flexbox } from 'react-layout-kit';
import { DeleteAction, HandleAction } from "../../../ActionIcon";
import { useStyle } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var Item = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (_ref, ref) {
  var color = _ref.color,
    dragOverlay = _ref.dragOverlay,
    dragging = _ref.dragging,
    disabled = _ref.disabled,
    fadeIn = _ref.fadeIn,
    handle = _ref.handle,
    index = _ref.index,
    listeners = _ref.listeners,
    onRemove = _ref.onRemove,
    item = _ref.item,
    renderItem = _ref.renderItem,
    renderContent = _ref.renderContent,
    _ref$hideRemove = _ref.hideRemove,
    hideRemove = _ref$hideRemove === void 0 ? false : _ref$hideRemove,
    sorting = _ref.sorting,
    style = _ref.style,
    actions = _ref.actions,
    transition = _ref.transition,
    transform = _ref.transform,
    id = _ref.id,
    className = _ref.className,
    props = _objectWithoutProperties(_ref, _excluded);
  var token = useToken();
  var _useStyle = useStyle(),
    styles = _useStyle.styles;
  var itemPrefixCls = classNames("".concat(styles.tokenPrefixCls, "-item"));
  useEffect(function () {
    if (!dragOverlay) {
      return;
    }
    document.body.style.cursor = 'grabbing';
    return function () {
      document.body.style.cursor = '';
    };
  }, [dragOverlay]);
  return /*#__PURE__*/_jsx("li", {
    className: classNames(styles.wrapper, className, _defineProperty(_defineProperty(_defineProperty({}, styles.wrapperFadeIn, fadeIn), "".concat(itemPrefixCls, "-wrapper-sorting"), sorting), styles.wrapperdragOverlay, dragOverlay)),
    style: {
      transition: transition,
      '--translate-x': transform ? "".concat(Math.round(transform.x), "px") : undefined,
      '--translate-y': transform ? "".concat(Math.round(transform.y), "px") : undefined,
      '--scale-x': transform !== null && transform !== void 0 && transform.scaleX ? "".concat(transform.scaleX) : undefined,
      '--scale-y': transform !== null && transform !== void 0 && transform.scaleY ? "".concat(transform.scaleY) : undefined,
      '--index': index,
      '--color': color
    },
    "data-testid": "list-item",
    ref: ref,
    children: /*#__PURE__*/_jsx("div", _objectSpread(_objectSpread(_objectSpread({
      className: classNames(styles.item, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(itemPrefixCls, "-dragging"), dragging), "".concat(itemPrefixCls, "-withHandle"), handle), styles.dragOverlay, dragOverlay), styles.disabled, disabled), "".concat(itemPrefixCls, "-discolorabled"), color)),
      style: _objectSpread(_objectSpread({}, style), {}, {
        backgroundColor: token.colorBgContainer
      }),
      "data-cypress": "draggable-item"
    }, !handle ? listeners : undefined), props), {}, {
      tabIndex: !handle ? 0 : undefined,
      children: renderItem ? renderItem(item, {
        dragOverlay: Boolean(dragOverlay),
        dragging: Boolean(dragging),
        sorting: Boolean(sorting),
        index: index,
        fadeIn: Boolean(fadeIn),
        listeners: listeners,
        ref: ref,
        style: style,
        transform: transform,
        transition: transition
      }) : /*#__PURE__*/_jsxs(Flexbox, {
        className: styles.content,
        direction: 'horizontal',
        align: 'center',
        children: [handle ? /*#__PURE__*/_jsx(HandleAction, _objectSpread({
          tabIndex: -1,
          className: classNames(styles.actions),
          cursor: "grab",
          "data-cypress": "draggable-handle",
          style: {
            width: 14,
            height: 24
          }
        }, listeners)) : null, /*#__PURE__*/_jsx(Flexbox, {
          flex: 1,
          style: {
            paddingLeft: 4
          },
          children: renderContent ? renderContent(item, index) : /*#__PURE__*/_jsx("div", {
            children: typeof item === 'string' ? item : index
          })
        }), /*#__PURE__*/_jsxs(Flexbox, {
          className: classNames(styles.actions),
          direction: 'horizontal',
          align: "center",
          children: [typeof actions === 'function' ? actions(item, index) : actions, hideRemove ? null : /*#__PURE__*/_jsx(DeleteAction, {
            tabIndex: -1,
            onClick: onRemove,
            style: {
              height: 22
            }
          })]
        })]
      })
    }))
  }, id);
}));
export default Item;