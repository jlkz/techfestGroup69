import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import { ConfigProvider as AntdConfigProvider } from 'antd';
import { useAntdToken, useThemeMode } from 'antd-style';
import { ThemeProvider, createStudioAntdTheme, getStudioStylish, getStudioToken } from "../theme";
import { jsx as _jsx } from "react/jsx-runtime";
export var useStudioAntdTheme = function useStudioAntdTheme(appearance) {
  var token = useAntdToken();
  var themeConfig = createStudioAntdTheme(appearance);
  var controlToken = {
    colorBgContainer: token === null || token === void 0 ? void 0 : token.colorFillQuaternary,
    colorBorder: 'transparent',
    controlOutline: 'transparent'
  };
  themeConfig.components = {
    Input: controlToken,
    InputNumber: controlToken,
    Select: controlToken,
    Tree: {
      colorBgContainer: 'transparent'
    },
    TreeSelect: controlToken
  };
  return themeConfig;
};
export var ConfigProvider = function ConfigProvider(_ref) {
  var children = _ref.children,
    componentToken = _ref.componentToken;
  var _useThemeMode = useThemeMode(),
    appearance = _useThemeMode.appearance,
    themeMode = _useThemeMode.themeMode;
  var studioTheme = useStudioAntdTheme(appearance);
  studioTheme.components = _objectSpread(_objectSpread({}, studioTheme.components), componentToken);
  return /*#__PURE__*/_jsx(AntdConfigProvider, {
    theme: studioTheme,
    children: /*#__PURE__*/_jsx(ThemeProvider, {
      appearance: appearance,
      themeMode: themeMode
      // 以下都是自定义主题
      ,
      theme: createStudioAntdTheme,
      customToken: getStudioToken,
      customStylish: getStudioStylish,
      children: children
    })
  });
};
export var withProvider = function withProvider(Component) {
  return function (props) {
    return /*#__PURE__*/_jsx(ConfigProvider, {
      children: /*#__PURE__*/_jsx(Component, _objectSpread({}, props))
    });
  };
};