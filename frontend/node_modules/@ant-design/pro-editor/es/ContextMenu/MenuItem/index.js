import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["label", "icon", "disabled", "nested", "shortcut", "active", "selected"];
import { forwardRef } from 'react';
import { Flexbox } from 'react-layout-kit';
import { AltIcon, ChevronRightIcon, CommandIcon, ControlIcon, ShiftIcon } from "./icons";
import { useStyles } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var KEYBOARD_ICON_MAP = {
  meta: /*#__PURE__*/_jsx(CommandIcon, {}),
  control: /*#__PURE__*/_jsx(ControlIcon, {}),
  shift: /*#__PURE__*/_jsx(ShiftIcon, {}),
  alt: /*#__PURE__*/_jsx(AltIcon, {}),
  enter: 'â†µ'
};
var CODE_MAP = {
  meta: 'meta',
  command: 'meta',
  cmd: 'meta',
  ctl: 'control',
  control: 'control',
  shift: 'shift',
  alt: 'alt'
};
var MenuItem = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var label = _ref.label,
    icon = _ref.icon,
    disabled = _ref.disabled,
    nested = _ref.nested,
    shortcut = _ref.shortcut,
    active = _ref.active,
    selected = _ref.selected,
    props = _objectWithoutProperties(_ref, _excluded);
  var _useStyles = useStyles(),
    styles = _useStyles.styles,
    cx = _useStyles.cx;
  return /*#__PURE__*/_jsxs("button", _objectSpread(_objectSpread({
    type: 'button'
  }, props), {}, {
    className: cx(styles.item, _defineProperty(_defineProperty({}, styles.selected, selected), styles.active, active)),
    disabled: disabled,
    ref: ref,
    role: "menuitem",
    children: [/*#__PURE__*/_jsxs(Flexbox, {
      gap: 8,
      horizontal: true,
      children: [icon && /*#__PURE__*/_jsx("span", {
        children: icon
      }), label]
    }), nested ? /*#__PURE__*/_jsx("span", {
      "aria-hidden": true,
      children: /*#__PURE__*/_jsx(ChevronRightIcon, {
        className: styles.arrow
      })
    }) : shortcut ? /*#__PURE__*/_jsx(Flexbox, {
      align: 'center',
      horizontal: true,
      children: shortcut.map(function (c) {
        var code = CODE_MAP[c.toLowerCase()];
        return /*#__PURE__*/_jsx("kbd", {
          className: styles.kbd,
          children: code ? KEYBOARD_ICON_MAP[code] : c.toUpperCase()
        }, c);
      })
    }) : null]
  }));
});
export default MenuItem;