import { Component } from 'react';
/******************************************************
 ************************* Dom *************************
 ******************************************************/
/**
 * 错误边界组件属性接口
 */
interface ErrorBoundaryProps {
    /**
     * 子组件
     */
    children?: React.ReactNode;
    /**
     * 导出配置项回调函数
     */
    onExportConfig?: () => void;
    /**
     * 重试回调函数
     */
    onRetry?: () => void;
    /**
     * 是否显示开发者选项
     */
    showDev?: boolean;
}
interface State {
    error?: Error;
    info: {
        componentStack: string;
    };
}
export default class ErrorBoundary extends Component<ErrorBoundaryProps, State> {
    state: State;
    componentDidCatch(error: any, info: any): void;
    errorInfo: () => import("react/jsx-runtime").JSX.Element;
    prodInfo: () => import("react/jsx-runtime").JSX.Element;
    render(): import("react/jsx-runtime").JSX.Element;
}
export {};
