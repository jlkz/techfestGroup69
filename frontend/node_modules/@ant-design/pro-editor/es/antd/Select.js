import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _templateObject;
import { Select as _Select } from 'antd';
import { createStyles } from 'antd-style';
import { ConfigProvider } from "../ConfigProvider";
import { jsx as _jsx } from "react/jsx-runtime";
var useStyles = createStyles(function (_ref) {
  var css = _ref.css,
    stylish = _ref.stylish,
    prefixCls = _ref.prefixCls;
  var prefix = "".concat(prefixCls, "-select");
  var scopes = ":not(.".concat(prefix, "-disabled):not(.").concat(prefix, "-customize-input)");
  return css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    &.", " {\n      &-multiple:not(&-customize-input) &.", "-selector {\n        ", ";\n      }\n\n      &", " {\n        &:hover {\n          .", "-selector {\n            border-color: transparent;\n            ", ";\n          }\n        }\n      }\n\n      &-focused", " {\n        &:hover {\n          .", "-selector {\n            ", ";\n          }\n        }\n\n        .", "-selector {\n          ", ";\n        }\n      }\n    }\n\n    .", " {\n      &-arrow {\n        top: 13px;\n        right: 8px;\n        width: 10px;\n        height: 10px;\n        font-size: 10px;\n      }\n    }\n  "])), prefix, prefix, stylish.controlContainer, scopes, prefix, stylish.controlContainer, scopes, prefix, stylish.controlContainerFocused, prefix, stylish.controlContainerFocused, prefix);
});
export var Select = function Select(props) {
  var _useStyles = useStyles(),
    styles = _useStyles.styles,
    cx = _useStyles.cx;
  return /*#__PURE__*/_jsx(ConfigProvider, {
    children: /*#__PURE__*/_jsx(_Select, _objectSpread(_objectSpread({}, props), {}, {
      className: cx(styles, props.className)
    }))
  });
};