import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _templateObject;
import { Tabs as _Tabs } from 'antd';
import { ConfigProvider } from "../ConfigProvider";
import { createStyles } from "../theme";
import { jsx as _jsx } from "react/jsx-runtime";
var useStyles = createStyles(function (_ref) {
  var token = _ref.token,
    prefixCls = _ref.prefixCls,
    css = _ref.css,
    stylish = _ref.stylish;
  var prefix = ".".concat(prefixCls, "-tabs");
  return {
    cls: css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      ", "-tab + ", "-tab {\n        margin: 8px 4px !important;\n        padding: 0 12px !important;\n      }\n\n      ", "-tab {\n        color: ", ";\n        transition: background-color 150ms ease-out;\n\n        &:first-child {\n          margin: 8px 4px 8px 0;\n          padding: 4px 12px !important;\n        }\n\n        &:hover {\n          color: ", " !important;\n          background: ", ";\n          border-radius: 4px;\n        }\n      }\n\n      ", "-nav {\n        height: 46px;\n        padding: 0 12px;\n        padding-right: 8px !important;\n      }\n\n      // blur \u6548\u679C\n      position: relative;\n      height: 100%;\n\n      ", "-nav {\n        position: absolute !important;\n        z-index: 10;\n        width: 100%;\n\n        ", "\n      }\n\n      ", "-content-holder {\n        // 46px \u662F tab \u7684\u9AD8\u5EA6 12px \u662F\u5408\u7406\u5185\u90E8\u95F4\u8DDD\n        padding-top: ", "px;\n        overflow-y: auto;\n      }\n    "])), prefix, prefix, prefix, token.colorTextSecondary, token.colorText, token.colorFillTertiary, prefix, prefix, stylish.backgroundBlur, prefix, 46 + 8)
  };
});
export var Tabs = function Tabs(props) {
  var _useStyles = useStyles(),
    styles = _useStyles.styles,
    cx = _useStyles.cx;
  return /*#__PURE__*/_jsx(ConfigProvider, {
    children: /*#__PURE__*/_jsx(_Tabs, _objectSpread(_objectSpread({}, props), {}, {
      className: cx(props.className, styles.cls)
    }))
  });
};