import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _templateObject;
import { Segmented as Tabs } from 'antd';
import { ConfigProvider } from "../ConfigProvider";
import { createStyles } from "../theme";
import { jsx as _jsx } from "react/jsx-runtime";
var useStyles = createStyles(function (_ref) {
  var token = _ref.token,
    css = _ref.css,
    prefixCls = _ref.prefixCls;
  return css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    padding: 4px;\n\n    .", "-segmented-item {\n      margin-right: 4px;\n      color: ", ";\n      border-radius: 2px;\n\n      &:hover {\n        color: ", ";\n      }\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n\n    .", "-segmented-item-selected {\n      color: ", ";\n\n      &:hover {\n        color: ", ";\n      }\n    }\n\n    .", "-segmented-item-label {\n      min-height: auto;\n      padding: 2px 7px;\n      line-height: unset;\n    }\n  "])), prefixCls, token.colorTextTertiary, token.colorTextSecondary, prefixCls, token.colorText, token.colorText, prefixCls);
});
export var Segmented = function Segmented(props) {
  var _useStyles = useStyles(),
    styles = _useStyles.styles,
    cx = _useStyles.cx;
  return /*#__PURE__*/_jsx(ConfigProvider, {
    children: /*#__PURE__*/_jsx(Tabs, _objectSpread(_objectSpread({}, props), {}, {
      className: cx(props.className, styles)
    }))
  });
};