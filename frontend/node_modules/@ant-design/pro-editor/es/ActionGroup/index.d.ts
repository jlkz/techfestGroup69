/// <reference types="react" />
import { ActionIconProps } from "..";
import { DropdownProps } from 'antd';
export type ActionIconGroupItemType = ActionIconProps & {
    /**
     * @description 展示的 icon
     */
    icon: React.ReactNode;
    /**
     * @description 样式
     * @ignore
     */
    style?: React.CSSProperties;
    /**
     * @description 每个按钮单独的key
     */
    key?: string;
    /**
     * @description 按钮点击事件的回调
     */
    onClick?: () => void;
    /**
     * @description 用于展示按钮的提示文案
     */
    label?: string;
};
type ActionIconGroupItemTypeWithDivider = ActionIconGroupItemType | {
    type: 'divider';
};
interface ActionGroupProps {
    /**
     * @description 自定义的classname
     * @ignore
     */
    className?: string;
    /**
     * @description 样式
     * @ignore
     */
    style?: React.CSSProperties;
    /**
     * @description 生成按钮的配置config
     */
    items?: Array<ActionIconGroupItemTypeWithDivider>;
    /**
     * @description 生成 drowDownMenuList 内容的 config
     */
    dropdownMenu?: Array<ActionIconGroupItemTypeWithDivider>;
    /**
     * @description 给 dropdownMenu 设置的自定义 Props，支持除了 Menu 外其余所有 antd dropdown Props 的设置
     */
    dropdownProps?: DropdownProps;
    /**
     * @description 用于自定义 dropdownMenu 下拉的触发 Dom，默认为 DashOutlined 的 Icon
     */
    dropdownMenuTrigger?: React.ReactNode;
    /**
     * @description 用于渲染自定义能力的render方法
     */
    render?: (config: Array<ActionIconGroupItemTypeWithDivider>, dropdownMenu?: Array<ActionIconGroupItemTypeWithDivider>) => JSX.Element;
    /**
     * @description 通用的 Click 触发
     */
    onClick?: (key?: string) => void;
    /**
     * @description 全屏按钮点击的回调
     */
    onFullScreenClick?: () => void;
    /**
     * @description 撤销按钮点击的回调
     */
    onUndoClick?: () => void;
    /**
     * @description 重做按钮点击的回调
     */
    onRedoClick?: () => void;
    /**
     * @description 删除按钮点击的回调
     */
    onDeleteClick?: () => void;
    /**
     * @description The type of the group
     * @default "block"
     */
    type?: 'ghost' | 'block' | 'pure';
    /**
     * @description The direction of the icons
     * @default "row"
     */
    direction?: 'row' | 'column';
    /**
     * @title 图标尺寸
     */
    size?: 'default' | 'large' | number;
}
declare const WrapperActionGroup: (props: ActionGroupProps) => import("react/jsx-runtime").JSX.Element;
export { WrapperActionGroup as ActionGroup };
