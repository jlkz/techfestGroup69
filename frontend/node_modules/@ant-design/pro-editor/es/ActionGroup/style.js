import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _templateObject, _templateObject2, _templateObject3;
import { createStyles } from "../theme";
export var useStyle = createStyles(function (_ref, _ref2) {
  var token = _ref.token,
    css = _ref.css,
    cx = _ref.cx,
    prefixCls = _ref.prefixCls;
  var type = _ref2.type,
    direction = _ref2.direction;
  var typeStylish = css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    background-color: ", ";\n    border: 1px solid ", ";\n  "])), type === 'block' ? token.colorFillTertiary : token.colorFillQuaternary, type === 'block' ? 'transparent' : token.colorBorder);
  var prefix = "".concat(prefixCls, "-").concat(token.editorPrefix, "-action-group");
  return {
    content: cx("".concat(prefix, "-content"), css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n        ", ";\n        width: fit-content;\n        padding: ", "px ", "px;\n        display: flex;\n        flex-direction: ", ";\n        border-radius: ", "px;\n        align-items: center;\n      "])), type !== 'pure' && typeStylish, token.padding / 8, token.padding / 8, direction, token.borderRadius)),
    button: cx("".concat(prefix, "-action-btn"), css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n        box-shadow: none;\n        border: none;\n        background-color: transparent;\n        &:hover {\n          color: ", " !important;\n        }\n      "])), token.colorIconHover))
  };
});