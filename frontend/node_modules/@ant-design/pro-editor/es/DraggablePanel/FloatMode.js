import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import { memo, useMemo } from 'react';
import { Rnd } from 'react-rnd';
import { useStyle } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
var DEFAULT_HEIGHT = 300;
var DEFAULT_WIDTH = 400;
export var FloatMode = /*#__PURE__*/memo(function (_ref) {
  var children = _ref.children,
    direction = _ref.direction,
    resize = _ref.resize,
    style = _ref.style,
    position = _ref.position,
    onPositionChange = _ref.onPositionChange,
    size = _ref.size,
    customizeDefaultSize = _ref.defaultSize,
    customizeDefaultPosition = _ref.defaultPosition,
    _ref$minWidth = _ref.minWidth,
    minWidth = _ref$minWidth === void 0 ? 280 : _ref$minWidth,
    _ref$minHeight = _ref.minHeight,
    minHeight = _ref$minHeight === void 0 ? 200 : _ref$minHeight,
    maxHeight = _ref.maxHeight,
    maxWidth = _ref.maxWidth,
    canResizing = _ref.canResizing;
  var _useStyle = useStyle(),
    styles = _useStyle.styles;
  var resizeHandleClassNames = useMemo(function () {
    if (!canResizing) return {};
    return {
      right: styles.rightHandle,
      left: styles.leftHandle,
      top: styles.topHandle,
      bottom: styles.bottomHandle
    };
  }, [canResizing, direction]);
  var resizing = useMemo(function () {
    if (canResizing) return resize;
    return _objectSpread({
      top: true,
      bottom: true,
      right: true,
      left: true,
      topRight: true,
      bottomRight: true,
      bottomLeft: true,
      topLeft: true
    }, resize);
  }, [canResizing, resize]);
  var defaultSize = _objectSpread({
    width: DEFAULT_WIDTH,
    height: DEFAULT_HEIGHT
  }, customizeDefaultSize);
  var defaultPosition = _objectSpread({
    x: 100,
    y: 100
  }, customizeDefaultPosition);
  var sizeProps = {
    minWidth: Math.max(minWidth, 0),
    minHeight: Math.max(minHeight, 0),
    maxHeight: maxHeight ? Math.max(maxHeight, 0) : undefined,
    maxWidth: maxWidth ? Math.max(maxWidth, 0) : undefined,
    defaultSize: defaultSize,
    size: size,
    style: style
  };
  return /*#__PURE__*/_jsx(Rnd, _objectSpread(_objectSpread({
    position: position,
    resizeHandleClasses: resizeHandleClassNames,
    default: _objectSpread(_objectSpread({}, defaultPosition), defaultSize),
    onDragStop: function onDragStop(e, data) {
      onPositionChange === null || onPositionChange === void 0 || onPositionChange({
        x: data.x,
        y: data.y
      });
    },
    bound: 'parent',
    enableResizing: resizing
  }, sizeProps), {}, {
    className: styles.float,
    children: children
  }));
});