import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13;
import { createStyles } from "../theme";
export var useStyle = createStyles(function (_ref) {
  var token = _ref.token,
    css = _ref.css,
    cx = _ref.cx,
    prefixCls = _ref.prefixCls;
  var prefix = "".concat(prefixCls, "-").concat(token === null || token === void 0 ? void 0 : token.editorPrefix, "-draggable-panel");
  var commonHandle = css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    position: relative;\n    &::before {\n      position: absolute;\n      z-index: 50;\n      transition: all 0.3s ease-in-out;\n      content: '';\n    }\n\n    &:hover,\n    &:active {\n      &::before {\n        background: ", ";\n      }\n    }\n  "])), token.colorPrimary);
  var commonToggle = css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    position: absolute;\n    opacity: 0;\n    z-index: 1001;\n    transition: opacity 0.1s;\n\n    border-radius: 4px;\n    cursor: pointer;\n    background: ", ";\n    border-width: 1px;\n    border-style: solid;\n    color: ", ";\n    border-color: ", ";\n\n    &:hover {\n      color: ", ";\n      background: ", ";\n    }\n  "])), token.colorBgElevated, token.colorTextTertiary, token.colorBorder, token.colorTextSecondary, token.colorFillQuaternary);
  var offset = 17;
  var toggleLength = 40;
  var toggleShort = 16;
  return {
    container: cx(prefix, css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n        flex-shrink: 0;\n        position: relative;\n        border: 0 solid ", ";\n\n        &:hover {\n          .", "-toggle {\n            opacity: 1;\n          }\n        }\n      "])), token.colorSplit, prefix)),
    toggleLeft: cx("".concat(prefix, "-toggle"), "".concat(prefix, "-toggle-left"), commonToggle, css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n        width: ", "px;\n        height: ", "px;\n        left: -", "px;\n        top: 50%;\n        margin-top: -20px;\n        border-radius: 4px 0 0 4px;\n        border-right-width: 0;\n      "])), toggleShort, toggleLength, offset)),
    toggleRight: cx("".concat(prefix, "-toggle"), "".concat(prefix, "-toggle-right"), commonToggle, css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n        width: ", "px;\n        height: ", "px;\n        right: -", "px;\n        top: 50%;\n        margin-top: -20px;\n        border-radius: 0 4px 4px 0;\n        border-left-width: 0;\n      "])), toggleShort, toggleLength, offset)),
    toggleTop: cx("".concat(prefix, "-toggle"), "".concat(prefix, "-toggle-top"), commonToggle, css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n        height: ", "px;\n        width: ", "px;\n        top: -", "px;\n        left: 50%;\n        margin-left: -20px;\n        border-radius: 4px 4px 0 0;\n        border-bottom-width: 0;\n      "])), toggleShort, toggleLength, offset)),
    toggleBottom: cx("".concat(prefix, "-toggle"), "".concat(prefix, "-toggle-bottom"), commonToggle, css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n        height: 16px;\n        width: ", "px;\n        bottom: -", "px;\n        left: 50%;\n        margin-left: -20px;\n        border-radius: 0 0 4px 4px;\n        border-top-width: 0;\n      "])), toggleLength, offset)),
    fixed: cx("".concat(prefix, "-fixed"), css(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n        background: ", ";\n        overflow: hidden;\n      "])), token.colorBgContainer)),
    float: cx("".concat(prefix, "-float"), css(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["\n        overflow: hidden;\n        border-radius: 8px;\n        background: ", ";\n        box-shadow: ", ";\n        z-index: 2000;\n      "])), token.colorBgElevated, token.boxShadowSecondary)),
    leftHandle: cx(css(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["\n        ", ";\n\n        &::before {\n          left: 50%;\n          width: 2px;\n          height: 100%;\n        }\n      "])), commonHandle), "".concat(prefix, "-left-handle")),
    rightHandle: cx(css(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["\n        ", ";\n        &::before {\n          right: 50%;\n          width: 2px;\n          height: 100%;\n        }\n      "])), commonHandle), "".concat(prefix, "-right-handle")),
    topHandle: cx("".concat(prefix, "-top-handle"), css(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral(["\n        ", ";\n\n        &::before {\n          top: 50%;\n          height: 2px;\n          width: 100%;\n        }\n      "])), commonHandle)),
    bottomHandle: cx("".concat(prefix, "-bottom-handle"), css(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral(["\n        ", ";\n\n        &::before {\n          bottom: 50%;\n          height: 2px;\n          width: 100%;\n        }\n      "])), commonHandle))
  };
});