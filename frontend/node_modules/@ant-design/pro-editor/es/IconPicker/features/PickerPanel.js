import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
var _templateObject;
import { AntDesignOutlined } from '@ant-design/icons';
import { Button, Result, Segmented } from 'antd';
import { Flexbox } from 'react-layout-kit';
import IconList from "../components/IconList";
import SearchBar from "../components/SearchBar";
import { useStore, useStoreApi } from "../store";
import IconItem from "./IconRender";
import IconfontScripts from "./IconfontScript";
import { css, cx, useToken } from "../../theme";
import { isEmptyIconList, isEmptyIconfontScripts } from "../store/selectors";
import { getIconName } from "../utils";
import { shallow } from 'zustand/shallow';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
var selector = function selector(s) {
  return {
    panelTabKey: s.panelTabKey,
    icon: s.icon,
    resetIcon: s.resetIcon
  };
};
var PickerPanel = function PickerPanel() {
  var _useStore = useStore(selector, shallow),
    panelTabKey = _useStore.panelTabKey,
    icon = _useStore.icon,
    resetIcon = _useStore.resetIcon;
  var token = useToken();
  var storeApi = useStoreApi();
  var isEmptyList = useStore(isEmptyIconList);
  var isEmptyScripts = useStore(isEmptyIconfontScripts);
  return /*#__PURE__*/_jsxs(Flexbox, {
    width: 216,
    gap: 12,
    style: {
      maxHeight: 400
    },
    children: [icon ? /*#__PURE__*/_jsxs(Flexbox, {
      distribution: 'space-between',
      horizontal: true,
      align: 'center',
      children: [/*#__PURE__*/_jsxs(Flexbox, {
        horizontal: true,
        align: 'center',
        gap: 8,
        children: [/*#__PURE__*/_jsx(IconItem, _objectSpread({}, icon)), /*#__PURE__*/_jsx("div", {
          children: getIconName(icon)
        })]
      }), /*#__PURE__*/_jsx(Button, {
        size: 'small',
        type: 'link',
        onClick: resetIcon,
        children: "\u79FB\u9664"
      })]
    }) : undefined, /*#__PURE__*/_jsx(Segmented, {
      options: [{
        label: 'Ant Design',
        value: 'antd',
        icon: /*#__PURE__*/_jsx(AntDesignOutlined, {})
      }, {
        label: 'Iconfont',
        value: 'iconfont'
      }],
      value: panelTabKey,
      onChange: function onChange(key) {
        storeApi.setState({
          panelTabKey: key
        });
      },
      block: true
    }), panelTabKey === 'iconfont' ? /*#__PURE__*/_jsx(IconfontScripts, {}) : null, isEmptyList ? isEmptyScripts ? null : /*#__PURE__*/_jsx(Result, {
      status: 'info',
      style: {
        padding: 0,
        paddingTop: 8
      },
      subTitle: '暂未选择图标库，请选择图标库'
    }) : /*#__PURE__*/_jsxs(_Fragment, {
      children: [/*#__PURE__*/_jsx(SearchBar, {}), /*#__PURE__*/_jsx(Flexbox, {
        className: cx(css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n              overflow-y: scroll;\n              border: 1px solid ", ";\n              border-left: 0;\n              padding-top: -1px;\n            "])), token.colorBorderSecondary)),
        children: /*#__PURE__*/_jsx(IconList, {})
      })]
    })]
  });
};
export default PickerPanel;