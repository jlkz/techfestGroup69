import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _templateObject, _templateObject2, _templateObject3;
import { createStyles } from "../theme";
export var useStyles = createStyles(function (_ref, _ref2) {
  var token = _ref.token,
    css = _ref.css,
    cx = _ref.cx,
    prefixCls = _ref.prefixCls;
  var size = _ref2.size,
    className = _ref2.className;
  var prefix = "".concat(prefixCls, "-").concat(token.editorPrefix, "-icon");
  var sizeBoundary = typeof size === 'number' ? css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n          width: ", "px !important;\n          height: ", "px !important;\n        "])), size, size) : '';
  var button = css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &:hover {\n      color: ", " !important;\n    }\n\n    &:active {\n      scale: 0.8;\n      color: ", ";\n    }\n\n    transition: color 600ms ", ", scale 400ms ", ",\n      background-color 100ms ", ";\n  "])), token.colorText, token.colorText, token.motionEaseOut, token.motionEaseOut, token.motionEaseOut);
  return {
    container: cx(prefix, button, sizeBoundary, className),
    tooltip: css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n      pointer-events: none;\n    "])))
  };
});