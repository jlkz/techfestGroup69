import classNames from 'classnames';
import { createRef, memo } from 'react';
import CopyButton from "./components/CopyButton";
import HighLighter from "./components/HighLighter";
import LanguageTag from "./components/LanguageTag";
import { useKeyDownCopyEvent } from "./hooks/useKeyDownCopyEvent";
import { useStyles } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
var HighlightBase = /*#__PURE__*/memo(function (props) {
  var children = props.children,
    style = props.style,
    className = props.className,
    _props$lineNumber = props.lineNumber,
    lineNumber = _props$lineNumber === void 0 ? false : _props$lineNumber,
    _props$copyable = props.copyable,
    copyable = _props$copyable === void 0 ? true : _props$copyable,
    theme = props.theme,
    _props$language = props.language,
    language = _props$language === void 0 ? 'tsx' : _props$language,
    _props$showLanguage = props.showLanguage,
    showLanguage = _props$showLanguage === void 0 ? true : _props$showLanguage,
    _props$type = props.type,
    type = _props$type === void 0 ? 'block' : _props$type,
    onCopy = props.onCopy;
  var _useStyles = useStyles({
      theme: theme,
      type: type
    }),
    styles = _useStyles.styles;
  var codeRef = /*#__PURE__*/createRef();
  useKeyDownCopyEvent(codeRef, onCopy);
  return /*#__PURE__*/_jsx(_Fragment, {
    children: /*#__PURE__*/_jsxs("div", {
      ref: codeRef,
      tabIndex: -1,
      style: style,
      className: classNames(styles.container, className),
      children: [copyable && /*#__PURE__*/_jsx(CopyButton, {
        onCopy: onCopy,
        theme: theme,
        content: children
      }), showLanguage && language && /*#__PURE__*/_jsx(LanguageTag, {
        theme: theme,
        children: language.toLowerCase()
      }), /*#__PURE__*/_jsx(HighLighter, {
        lineNumber: lineNumber,
        language: language,
        theme: theme,
        children: children
      })]
    })
  });
});
export { HighlightBase };