/**
 * 高亮能力基于highlight.js 的语法解析能力 https://highlightjs.org/
 * 听说过的还算有名的语言放在langugaes中了，需要新增语言时在languages文件夹中添加并import使用，加入到 languageMap中
 * 如果没有在 https://github.com/highlightjs/highlight.js/tree/master/src/languages 中查找是否支持，然后添加
 * 优先支持主流语言，没有import在代码中使用的不会打包
 */
import { THEME_LIGHT } from "../../theme";
import { Loading3QuartersOutlined as Loading } from '@ant-design/icons';
import classNames from 'classnames';
import { memo } from 'react';
import { Center } from 'react-layout-kit';
import { useShiki } from "../../hooks/useShiki";
import HighLightJS from "../HighLightJS";
import { useStyles } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
var HighLighter = /*#__PURE__*/memo(function (props) {
  var children = props.children,
    _props$lineNumber = props.lineNumber,
    lineNumber = _props$lineNumber === void 0 ? false : _props$lineNumber,
    _props$theme = props.theme,
    theme = _props$theme === void 0 ? THEME_LIGHT : _props$theme,
    language = props.language,
    prefixCls = props.prefixCls;
  var _useStyles = useStyles({
      outPrefix: prefixCls,
      lineNumber: lineNumber,
      theme: theme
    }),
    styles = _useStyles.styles;
  var _useShiki = useShiki(language, theme),
    renderShiki = _useShiki.renderShiki,
    loading = _useShiki.loading;
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [loading ? /*#__PURE__*/_jsx(HighLightJS, {
      lineNumber: lineNumber,
      theme: theme,
      language: language,
      prefixCls: prefixCls,
      children: children
    }) : /*#__PURE__*/_jsx("div", {
      className: classNames(styles.shiki),
      dangerouslySetInnerHTML: {
        __html: renderShiki(children) || ''
      }
    }), loading ? /*#__PURE__*/_jsxs(Center, {
      className: styles.center,
      gap: 8,
      horizontal: true,
      children: [/*#__PURE__*/_jsx(Loading, {
        spin: true,
        className: styles.loading
      }), "Highlighting..."]
    }) : null]
  });
});
export default HighLighter;