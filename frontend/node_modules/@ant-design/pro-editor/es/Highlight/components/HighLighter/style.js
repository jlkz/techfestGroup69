import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _templateObject, _templateObject2, _templateObject3, _templateObject4;
import { createStyles } from "../../../theme";
import { getThemeColor } from "../../theme/colors";
export var useStyles = createStyles(function (_ref, _ref2) {
  var css = _ref.css,
    cx = _ref.cx,
    token = _ref.token,
    prefixCls = _ref.prefixCls;
  var lineNumber = _ref2.lineNumber,
    theme = _ref2.theme,
    outPrefix = _ref2.outPrefix;
  var prefix = "".concat(prefixCls, "-").concat(token.editorPrefix, "-").concat(outPrefix ? outPrefix : 'highlight');
  var _getThemeColor = getThemeColor(theme === 'dark'),
    colorTextTertiary = _getThemeColor.colorTextTertiary;
  var lineNumberStyle = css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      code {\n        counter-reset: step;\n        counter-increment: step 0;\n      }\n\n      code .line::before {\n        content: counter(step);\n        counter-increment: step;\n        width: 1rem;\n        margin-right: 1.5rem;\n        display: inline-block;\n        text-align: right;\n        color: rgba(115, 138, 148, 0.4);\n        user-select: none;\n      }\n    "])));
  return {
    shiki: cx("".concat(prefix, "-shiki"), css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n          .shiki {\n            overflow-x: scroll;\n            background: none !important;\n            ", "\n          }\n        "])), lineNumber ? lineNumberStyle : '')),
    loading: cx(css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n        color: ", ";\n      "])), colorTextTertiary)),
    center: cx(css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n          backdrop-filter: saturate(180%) blur(10px);\n          position: absolute;\n          top: 0;\n          right: 0;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n\n          height: 36px;\n          padding: 0 8px;\n\n          font-family: ", ";\n          color: ", ";\n\n          border-radius: ", ";\n        "])), token.fontFamilyCode, colorTextTertiary, token.borderRadius))
  };
});