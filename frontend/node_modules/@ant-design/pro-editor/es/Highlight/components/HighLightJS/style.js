import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _templateObject;
import { createStyles } from "../../../theme";
import { getThemeColor } from "../../theme/colors";
export var useStyles = createStyles(function (_ref, theme) {
  var css = _ref.css,
    cx = _ref.cx;
  var _getThemeColor = getThemeColor(theme === 'dark'),
    colorBlue = _getThemeColor.colorBlue,
    colorGreen = _getThemeColor.colorGreen,
    colorOrange = _getThemeColor.colorOrange,
    colorRed = _getThemeColor.colorRed,
    colorText = _getThemeColor.colorText,
    colorTextSecondary = _getThemeColor.colorTextSecondary,
    colorTextTertiary = _getThemeColor.colorTextTertiary;
  return {
    theme: cx(css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n        display: block;\n        overflow-x: auto;\n        color: ", ";\n        background-color: ", ";\n\n        /* Comment */\n        .hljs-comment,\n        .hljs-quote {\n          color: ", ";\n        }\n\n        /*  Red */\n        .hljs-variable,\n        .hljs-attribute,\n        .hljs-template-variable,\n        .hljs-tag,\n        .hljs-name,\n        .hljs-selector-id,\n        .hljs-selector-class,\n        .hljs-regexp,\n        .hljs-title,\n        .hljs-deletion {\n          color: ", ";\n        }\n\n        /* Orange */\n\n        .hljs-builtin-name,\n        .hljs-literal,\n        .hljs-type,\n        .hljs-params,\n        .hljs-meta,\n        .hljs-link {\n          color: ", ";\n        }\n\n        /* Green */\n        .hljs-string,\n        .hljs-number,\n        .hljs-symbol,\n        .hljs-bullet,\n        .hljs-addition {\n          color: ", ";\n        }\n\n        /* Blue */\n        .hljs-keyword,\n        .hljs-doctag,\n        .hljs-built_in,\n        .hljs-selector-tag,\n        .hljs-section {\n          color: ", ";\n        }\n\n        .hljs-emphasis {\n          font-style: italic;\n        }\n\n        .hljs-strong {\n          font-weight: bold;\n        }\n      "])), colorText, colorTextSecondary, colorTextTertiary, colorRed, colorOrange, colorGreen, colorBlue))
  };
});