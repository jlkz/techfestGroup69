import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
/**
 * 高亮能力基于highlight.js 的语法解析能力 https://highlightjs.org/
 * 听说过的还算有名的语言放在langugaes中了，需要新增语言时在languages文件夹中添加并import使用，加入到 languageMap中
 * 如果没有在 https://github.com/highlightjs/highlight.js/tree/master/src/languages 中查找是否支持，然后添加
 * 优先支持主流语言，没有import在代码中使用的不会打包
 */
import classNames from 'classnames';
import { memo, useEffect, useState } from 'react';
import { useHighlight } from "../../hooks/useHighlight";
import { THEME_LIGHT } from "../../theme";
import HighlightCell from "../HighlightCell";
import { useStyles } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
var HighLighJS = /*#__PURE__*/memo(function (props) {
  var children = props.children,
    _props$lineNumber = props.lineNumber,
    lineNumber = _props$lineNumber === void 0 ? false : _props$lineNumber,
    _props$theme = props.theme,
    theme = _props$theme === void 0 ? THEME_LIGHT : _props$theme,
    language = props.language,
    prefixCls = props.prefixCls;
  var _useState = useState(null),
    _useState2 = _slicedToArray(_useState, 2),
    codeBlock = _useState2[0],
    setCodeBlock = _useState2[1];
  var _useStyles = useStyles(theme),
    styles = _useStyles.styles;
  var _useHighlight = useHighlight(language),
    renderHighlight = _useHighlight.renderHighlight;
  var highlightCode = function highlightCode() {
    // 数据为空即跳过渲染
    if (!children) {
      return;
    }

    // 构造table展示codeblock
    var value = renderHighlight(children);
    var sourceData = value.split(/\r?\n/);
    // 构造整个list所需要的内容（行号和内容）
    var rowList = sourceData.map(function (rowValue, index) {
      return {
        value: rowValue,
        index: index + 1
      };
    });
    setCodeBlock(rowList.map(function (src, index) {
      return /*#__PURE__*/_jsx("tr", {
        children: /*#__PURE__*/_jsx(HighlightCell, {
          lineNumber: lineNumber,
          data: src,
          prefixCls: prefixCls
        })
      }, index);
    }));
  };

  // 触发重新渲染
  useEffect(function () {
    highlightCode();
  }, [children, theme, language, lineNumber]);
  return /*#__PURE__*/_jsx("pre", {
    className: classNames(styles.theme),
    children: /*#__PURE__*/_jsx("table", {
      border: 0,
      cellPadding: 0,
      cellSpacing: 0,
      children: /*#__PURE__*/_jsx("tbody", {
        children: codeBlock
      })
    })
  });
});
export default HighLighJS;