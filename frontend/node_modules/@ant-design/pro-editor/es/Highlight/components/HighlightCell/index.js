import classNames from 'classnames';
import { useStyles } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
export default function HighlightCell(_ref) {
  var _data$value;
  var data = _ref.data,
    emptyText = _ref.emptyText,
    _ref$lineNumber = _ref.lineNumber,
    lineNumber = _ref$lineNumber === void 0 ? false : _ref$lineNumber,
    onMouseDown = _ref.onMouseDown;
  var _useStyles = useStyles(),
    styles = _useStyles.styles;
  var rowIndex = data === null || data === void 0 ? void 0 : data.index;
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [lineNumber ? /*#__PURE__*/_jsx("td", {
      className: classNames(styles.index),
      children: rowIndex
    }) : null, /*#__PURE__*/_jsx("td", {
      onMouseDown: onMouseDown,
      className: styles.content,
      dangerouslySetInnerHTML: {
        __html: (_data$value = data === null || data === void 0 ? void 0 : data.value) !== null && _data$value !== void 0 ? _data$value : emptyText || ''
      }
    })]
  });
}