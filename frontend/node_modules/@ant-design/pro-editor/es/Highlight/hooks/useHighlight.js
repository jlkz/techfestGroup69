import hljs from 'highlight.js/lib/core';
import { useEffect } from 'react';
import { default as bash, default as sh } from 'highlight.js/lib/languages/bash';
import css from 'highlight.js/lib/languages/css';
import java from 'highlight.js/lib/languages/java';
import { default as javascript, default as jsx } from 'highlight.js/lib/languages/javascript';
import json from 'highlight.js/lib/languages/json';
import markdown from 'highlight.js/lib/languages/markdown';
import python from 'highlight.js/lib/languages/python';
import sql from 'highlight.js/lib/languages/sql';
import { default as tsx, default as typescript } from 'highlight.js/lib/languages/typescript';
import xml from 'highlight.js/lib/languages/xml';
import yaml from 'highlight.js/lib/languages/yaml';

// 目前支持的语言列表
export var languageMap = {
  javascript: javascript,
  typescript: typescript,
  css: css,
  json: json,
  markdown: markdown,
  xml: xml,
  yaml: yaml,
  tsx: tsx,
  jsx: jsx,
  java: java,
  python: python,
  sql: sql,
  bash: bash,
  sh: sh
};
export var useHighlight = function useHighlight(language) {
  // 按需加载语言
  useEffect(function () {
    if (language && languageMap[language]) {
      hljs.registerLanguage(language, languageMap[language]);
    } else {
      Object.keys(languageMap).forEach(function (lan) {
        hljs.registerLanguage(lan, languageMap[lan]);
      });
    }
  }, [language]);
  var renderHighlight = function renderHighlight(content) {
    var result = null;
    if (language & languageMap[language]) {
      result = hljs.highlight(language, content || '').value;
    } else {
      result = hljs.highlightAuto(content).value;
    }
    return result;
  };
  return {
    renderHighlight: renderHighlight
  };
};