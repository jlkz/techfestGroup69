import ReactFlow, { Background, ReactFlowProvider } from 'reactflow';
import Artboard from "./Artboard";
import ControlAction from "./ControlAction";
import { useStyle } from "./style";

// 只有引入默认 style 才能保证交互是正常的
import 'reactflow/dist/style.css';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var nodeTypes = {
  artboard: Artboard
};
var Canvas = function Canvas(_ref) {
  var children = _ref.children,
    viewport = _ref.viewport,
    defaultViewport = _ref.defaultViewport,
    onViewportChange = _ref.onViewportChange,
    _ref$control = _ref.control,
    control = _ref$control === void 0 ? true : _ref$control,
    _ref$extraControlBtns = _ref.extraControlBtns,
    extraControlBtns = _ref$extraControlBtns === void 0 ? [] : _ref$extraControlBtns;
  var _useStyle = useStyle(),
    styles = _useStyle.styles;
  return /*#__PURE__*/_jsx(ReactFlowProvider, {
    children: /*#__PURE__*/_jsxs(ReactFlow, {
      minZoom: 0.25,
      maxZoom: 4,
      nodes: [{
        id: 'artboard',
        type: 'artboard',
        data: children,
        draggable: false,
        connectable: false,
        position: {
          x: 0,
          y: 0
        }
      }],
      defaultViewport: defaultViewport,
      onMove: function onMove(e, v) {
        onViewportChange === null || onViewportChange === void 0 || onViewportChange(v);
      },
      nodeTypes: nodeTypes,
      fitView: true,
      onlyRenderVisibleElements: true,
      panOnScroll: true,
      className: styles.flow,
      panOnDrag: false,
      zoomOnScroll: false,
      children: [control && /*#__PURE__*/_jsx("div", {
        className: styles.control,
        children: /*#__PURE__*/_jsx(ControlAction, {
          viewport: viewport,
          extraBtns: extraControlBtns
        })
      }), /*#__PURE__*/_jsx(Background, {
        color: "#aaa",
        gap: 16,
        style: {
          zIndex: -1
        }
      })]
    })
  });
};
export default Canvas;