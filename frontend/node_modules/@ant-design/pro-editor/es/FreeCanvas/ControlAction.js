import { ExpandOutlined, MinusOutlined, PlusOutlined } from '@ant-design/icons';
import { Button, ConfigProvider, Space, Tooltip } from 'antd';
import { useTheme } from 'antd-style';
import isEqual from 'lodash.isequal';
import { memo, useEffect } from 'react';
import { Center } from 'react-layout-kit';
import { useReactFlow, useViewport } from 'reactflow';
import { jsxs as _jsxs } from "react/jsx-runtime";
import { jsx as _jsx } from "react/jsx-runtime";
var Zoom = /*#__PURE__*/memo(function () {
  var reactFlow = useReactFlow();
  var _useViewport = useViewport(),
    zoom = _useViewport.zoom;
  var handleZoomTo = function handleZoomTo() {
    if (zoom === 1) {
      reactFlow.zoomTo(0.5);
    } else {
      reactFlow.zoomTo(1);
    }
  };
  return /*#__PURE__*/_jsx(Tooltip, {
    title: zoom === 1 ? '缩放为 2:1' : '缩放为 1:1',
    children: /*#__PURE__*/_jsxs(Button, {
      onClick: handleZoomTo,
      style: {
        width: 64
      },
      children: [Math.round(zoom * 100), "%"]
    })
  });
});
var ControlAction = /*#__PURE__*/memo(function (_ref) {
  var viewport = _ref.viewport,
    _ref$extraBtns = _ref.extraBtns,
    extraBtns = _ref$extraBtns === void 0 ? [] : _ref$extraBtns;
  var token = useTheme();
  var reactFlow = useReactFlow();
  var handleZoomIn = function handleZoomIn() {
    reactFlow.zoomIn();
  };
  var handleZoomOut = function handleZoomOut() {
    reactFlow.zoomOut();
  };
  var handleZoomFit = function handleZoomFit() {
    reactFlow.fitView();
  };
  useEffect(function () {
    if (isEqual(reactFlow.getViewport(), viewport)) return;
    reactFlow.setViewport(viewport);
  }, [viewport]);
  return /*#__PURE__*/_jsx(ConfigProvider, {
    theme: {
      token: {
        colorBgContainer: token.colorBgElevated
      }
    },
    children: /*#__PURE__*/_jsx(Center, {
      padding: 8,
      children: /*#__PURE__*/_jsxs(Space, {
        children: [/*#__PURE__*/_jsx(Button, {
          icon: /*#__PURE__*/_jsx(MinusOutlined, {}),
          onClick: handleZoomOut
        }), /*#__PURE__*/_jsx(Zoom, {}), /*#__PURE__*/_jsx(Button, {
          icon: /*#__PURE__*/_jsx(PlusOutlined, {}),
          onClick: handleZoomIn
        }), /*#__PURE__*/_jsx(Tooltip, {
          title: '自适应画布',
          children: /*#__PURE__*/_jsx(Button, {
            icon: /*#__PURE__*/_jsx(ExpandOutlined, {}),
            onClick: handleZoomFit
          })
        }), extraBtns]
      })
    })
  });
});
export default ControlAction;