import isEqual from 'fast-deep-equal';
import { treeDataReducer } from "../treeDataReducer";
export var crudSlice = function crudSlice(set, get) {
  return {
    internalUpdateTreeData: function internalUpdateTreeData(treeData, payload) {
      var _get = get(),
        onTreeDataChange = _get.onTreeDataChange,
        prevTreeData = _get.treeData;
      if (isEqual(treeData, prevTreeData)) return;
      set({
        treeData: treeData
      });
      onTreeDataChange === null || onTreeDataChange === void 0 || onTreeDataChange(treeData, payload);
    },
    dispatchTreeData: function dispatchTreeData(payload) {
      var _get2 = get(),
        internalUpdateTreeData = _get2.internalUpdateTreeData,
        treeData = _get2.treeData;
      var nextTreeData = treeDataReducer(treeData, payload);
      internalUpdateTreeData(nextTreeData, payload);
    },
    addNode: function addNode(node, index) {
      get().dispatchTreeData({
        type: 'addNode',
        node: node,
        index: index
      });
    },
    removeNode: function removeNode(id) {
      get().dispatchTreeData({
        type: 'removeNode',
        id: id
      });
    },
    updateNodeContent: function updateNodeContent(id, content) {
      get().dispatchTreeData({
        type: 'updateNodeContent',
        content: content,
        id: id
      });
    },
    toggleExtraVisible: function toggleExtraVisible(id) {
      get().dispatchTreeData({
        type: 'toggleExtraVisible',
        id: id
      });
    }
  };
};