import { useImperativeHandle } from 'react';
import { createStoreUpdater } from 'zustand-utils';
import { useSortableTree } from "../hooks/useSortableTree";
import { useStoreApi } from "../store";
var StoreUpdater = function StoreUpdater(_ref) {
  var defaultTreeData = _ref.defaultTreeData,
    treeData = _ref.treeData,
    onTreeDataChange = _ref.onTreeDataChange,
    onSelectedIdsChange = _ref.onSelectedIdsChange,
    renderContent = _ref.renderContent,
    renderExtra = _ref.renderExtra,
    ref = _ref.ref,
    hideRemove = _ref.hideRemove,
    hideAdd = _ref.hideAdd,
    indentationWidth = _ref.indentationWidth,
    disableDrag = _ref.disableDrag,
    sortableRule = _ref.sortableRule,
    virtual = _ref.virtual;
  var storeApi = useStoreApi();
  var useStoreUpdater = createStoreUpdater(storeApi);
  useStoreUpdater('treeData', defaultTreeData, []);
  useStoreUpdater('treeData', treeData);
  useStoreUpdater('renderContent', renderContent);
  useStoreUpdater('renderExtra', renderExtra);
  useStoreUpdater('onTreeDataChange', onTreeDataChange);
  useStoreUpdater('indentationWidth', indentationWidth);
  useStoreUpdater('hideAdd', hideAdd);
  useStoreUpdater('hideRemove', hideRemove);
  useStoreUpdater('virtual', virtual);
  useStoreUpdater('disableDrag', disableDrag);
  useStoreUpdater('sortableRule', sortableRule);
  useStoreUpdater('onSelectedIdsChange', onSelectedIdsChange);

  // 将 store 传递到外部
  var instance = useSortableTree();
  useImperativeHandle(ref, function () {
    return instance;
  });
  return null;
};
export default StoreUpdater;