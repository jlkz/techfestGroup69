import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _excluded = ["childCount", "clone", "depth", "disableSelection", "collapsed", "indentationWidth", "onCollapse", "onRemove", "style", "id", "showExtra", "hideRemove", "node", "virtualStyle"];
var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;
import { useSortable } from '@dnd-kit/sortable';
import { CSS } from '@dnd-kit/utilities';
import { useClickAway } from 'ahooks';
import { memo, useRef } from 'react';
import { shallow } from 'zustand/shallow';
import { createStyles } from "../../../theme";
import { CollapseAction, DeleteAction, HandleAction } from "../../../ActionIcon";
import { useStore } from "../../store";
import { iOS } from "../../utils/utils";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
var useStyles = createStyles(function (_ref, _ref2) {
  var css = _ref.css,
    cx = _ref.cx,
    prefixCls = _ref.prefixCls,
    token = _ref.token;
  var collapsed = _ref2.collapsed;
  var componentPrefix = "".concat(prefixCls, "-").concat(token.editorPrefix, "-sortable-tree");
  var nodePrefix = "".concat(componentPrefix, "-node");
  return {
    // 透出给组件层面拼接使用
    componentPrefix: componentPrefix,
    container: cx(nodePrefix, "".concat(nodePrefix, "-indicator"), css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n          margin-bottom: 4px;\n          padding-left: 12px;\n\n          &:hover {\n            .", "-handle, .", "-remove {\n              opacity: 1;\n            }\n          }\n        "])), nodePrefix, nodePrefix)),
    deleteAction: cx("".concat(nodePrefix, "-remove"), css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n          opacity: 0;\n        "])))),
    collapseAction: css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n        svg {\n          transform: ", ";\n          transition: transform 250ms ease;\n        }\n      "])), collapsed ? 'rotate(-90deg)' : ''),
    extra: cx("".concat(nodePrefix, "-extra"), css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n          margin-bottom: 8px;\n        "])))),
    handle: css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n        position: absolute;\n        left: -13px;\n        opacity: 0;\n      "])))
  };
});
var animateLayoutChanges = function animateLayoutChanges(_ref3) {
  var isSorting = _ref3.isSorting,
    wasDragging = _ref3.wasDragging;
  return isSorting || wasDragging ? false : true;
};
var TreeItem = /*#__PURE__*/memo(function (_ref4) {
  var childCount = _ref4.childCount,
    clone = _ref4.clone,
    depth = _ref4.depth,
    _ref4$disableSelectio = _ref4.disableSelection,
    disableSelection = _ref4$disableSelectio === void 0 ? iOS : _ref4$disableSelectio,
    collapsed = _ref4.collapsed,
    _indentationWidth = _ref4.indentationWidth,
    onCollapse = _ref4.onCollapse,
    onRemove = _ref4.onRemove,
    style = _ref4.style,
    id = _ref4.id,
    showExtra = _ref4.showExtra,
    hideRemove = _ref4.hideRemove,
    node = _ref4.node,
    virtualStyle = _ref4.virtualStyle,
    props = _objectWithoutProperties(_ref4, _excluded);
  var _useStyles = useStyles({
      collapsed: collapsed
    }),
    styles = _useStyles.styles,
    cx = _useStyles.cx;
  var nodePrefix = "".concat(styles.componentPrefix, "-node");
  var _useStore = useStore(function (s) {
      return [s.indentationWidth, s.selectedIds.includes(id), s.renderContent, s.renderExtra, s.withKeyboardSelectNode, s.deselectedAll, s.disableDrag];
    }, shallow),
    _useStore2 = _slicedToArray(_useStore, 7),
    indentationWidth = _useStore2[0],
    selected = _useStore2[1],
    Content = _useStore2[2],
    Extra = _useStore2[3],
    withKeyboardSelectNode = _useStore2[4],
    deselectedNode = _useStore2[5],
    disableDrag = _useStore2[6];
  var extraPanelVisible = showExtra && !clone;
  var containerRef = useRef(document.getElementsByClassName(styles.componentPrefix).item(0));
  var _useSortable = useSortable({
      id: id,
      animateLayoutChanges: animateLayoutChanges
    }),
    ghost = _useSortable.isDragging,
    disableInteraction = _useSortable.isSorting,
    listeners = _useSortable.listeners,
    attributes = _useSortable.attributes,
    setDraggableNodeRef = _useSortable.setDraggableNodeRef,
    setDroppableNodeRef = _useSortable.setDroppableNodeRef,
    transform = _useSortable.transform,
    transition = _useSortable.transition;
  useClickAway(function () {
    deselectedNode();
  }, [containerRef]);
  return /*#__PURE__*/_jsx(_Fragment, {
    children: /*#__PURE__*/_jsxs("li", _objectSpread(_objectSpread({
      ref: setDroppableNodeRef,
      className: cx(styles.container, clone && "".concat(nodePrefix, "-clone"), ghost && "".concat(nodePrefix, "-ghost"), selected && !clone && "".concat(nodePrefix, "-selected"), disableSelection && 'disableSelection'),
      style: _objectSpread({
        pointerEvents: disableInteraction ? 'none' : undefined,
        '--spacing': "".concat(indentationWidth * depth + (disableDrag ? 0 : 13), "px"),
        transform: CSS.Translate.toString(transform),
        transition: transition
      }, virtualStyle),
      onClick: function onClick(e) {
        withKeyboardSelectNode(e, id);
      }
    }, props), {}, {
      children: [/*#__PURE__*/_jsxs("div", {
        className: "".concat(nodePrefix, "-body"),
        ref: setDraggableNodeRef,
        style: style,
        children: [disableDrag ? null : /*#__PURE__*/_jsx(HandleAction, _objectSpread(_objectSpread(_objectSpread({}, listeners), attributes), {}, {
          className: cx("".concat(nodePrefix, "-handle"), clone ? undefined : styles.handle),
          style: {
            width: 12
          }
        })), onCollapse && /*#__PURE__*/_jsx(CollapseAction, {
          onClick: function onClick(e) {
            e.stopPropagation();
            onCollapse();
          },
          className: styles.collapseAction
        }), /*#__PURE__*/_jsx("span", {
          className: "".concat(nodePrefix, "-content"),
          children: Content ? /*#__PURE__*/_jsx(Content, _objectSpread({}, node)) : id
        }), !hideRemove && !clone && onRemove && /*#__PURE__*/_jsx(DeleteAction, {
          onClick: onRemove,
          title: '删除此项',
          className: styles.deleteAction
        }), clone && childCount && childCount > 1 ? /*#__PURE__*/_jsx("span", {
          className: "".concat(nodePrefix, "-count"),
          children: childCount
        }) : null]
      }), extraPanelVisible ? /*#__PURE__*/_jsx("div", {
        className: styles.extra,
        children: Extra && /*#__PURE__*/_jsx(Extra, _objectSpread({}, node))
      }) : null]
    }))
  });
});
export default TreeItem;